<%= form_for(@event, html: {class: "form-horizontal", role: "form", data: {'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host}}) do |f| %>
    <% if @event.errors.any? %>
        <div class="alert alert-danger alert-dismissable" role="alert">
          <button type="button" class="close" data-dismiss="alert">
            <span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4><%= pluralize(@event.errors.count, "error") %> prohibited this event from being saved:</h4>

          <ul>
            <% @event.errors.full_messages.each do |msg| %>
                <li><%= msg %></li>
            <% end %>
          </ul>
        </div>
    <% end %>

    <div class="form-group">
      <%= f.label :name, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.text_field :name, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :floor, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.text_field :floor, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :suite, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.text_field :suite, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :description, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.text_field :description, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :starts_at, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.datetime_select :starts_at, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :ends_at, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.datetime_select :ends_at, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label 'Image (recommended dimensions: 860px x 800px or 430px x 400px)', class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
        <%= f.file_field :image_url, class: "form-control" %>
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-10">
        <%= f.submit class: "btn btn-primary" %>
      </div>
    </div>
<% end %>

<script>
  $(function () {
    $('.datetimepicker').datetimepicker({
      sideBySide: true,
      minDate: moment(),
      keepInvalid: true
    });
    $('form').find("input:file").each(function (i, elem) {
      var fileInput = $(elem);
      var form = $(fileInput.parents('form:first'));
      var submitButton = form.find('input[type="submit"]');
      var progressBar = $("<div class='bar'></div>");
      var barContainer = $("<div class='progress'></div>").append(progressBar);
      fileInput.after(barContainer);
      fileInput.fileupload({
        fileInput: fileInput,
        url: form.data('url'),
        type: 'POST',
        autoUpload: true,
        formData: form.data('form-data'),
        paramName: 'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
        dataType: 'XML',  // S3 returns XML if success_action_status is set to 201
        replaceFileInput: false,
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          progressBar.css('width', progress + '%')
        },
        start: function (e) {
          submitButton.prop('disabled', true);

          progressBar.css('background', 'green').css('display', 'block').css('width', '0%').text("Loading...");
        },
        done: function (e, data) {
          submitButton.prop('disabled', false);
          progressBar.text("Uploading done");

          // extract key and generate URL from response
          var key = $(data.jqXHR.responseXML).find("Key").text();
          var url = '//' + form.data('host') + '/' + key;

          // create hidden field
          var input = $("<input />", {type: 'hidden', name: fileInput.attr('name'), value: url});
          form.append(input);
        },
        fail: function (e, data) {
          submitButton.prop('disabled', false);

          progressBar.css("background", "red").text("Failed");
        }
      });
    });
  });
</script>
